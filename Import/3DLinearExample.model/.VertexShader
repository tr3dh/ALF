#version 330

// input vertex attribute die die pipeline an den vertex shader 端bergibt
in vec3 vertexPosition;
in vec2 vertexTexCoord;
in vec3 vertexNormal;
in vec4 vertexColor;

// input uniforms, werden von pipeline 端bergeben
uniform mat4 mvp;
uniform mat4 matModel;
uniform mat4 matNormal;
uniform float time;

// Vertex eigenschaften die an den fragment shader 端bergeben werden
out vec3 fragPosition;
out vec2 fragTexCoord;
out vec4 fragColor;
out vec3 fragNormal;

//
void main()
{
    // Umrechnung von Vertex auf Fragment (Pixel)
    fragPosition = vec3(matModel*vec4(vertexPosition, 1.0));
    
    fragTexCoord = vertexTexCoord;
    fragColor = vertexColor;
    fragNormal = normalize(vec3(matNormal * vec4(vertexNormal, 1.0)));

    // Renderposition f端r den Vertex
    gl_Position = mvp*vec4(vertexPosition, 1.0);
}