{
    // Standard Materialparameter
    "stdParams": {
        "E": 20000,                 // Elastizitäts Modul
        "t": 0.1,                   // Dicke
        "v": 0.3                    // Querkontraktionszahl/Poissonzahl
    },

    // Angabe über die Linearität des Materials
    // "nonLinearApproach" wird nur gelesen wenn dieser bool auf false gesetzt ist
    "isLinear": false,

    // nicht Linearer Ansatz für Material
    // es sind hierbei sowohl implizite als auch explizite und vollexplizite Ansätze möglich
    // momentan sind nur Ansätze mögliche in denen Tensoren maximal zweiter Stufe auftauchen
    "nonLinearApproach": {

        // angabe der Inneren Variable und ihrer Dimension bzw. Tensorstufe
        // also für 0 ist sie ein Skalar für 1 ein Vektor usw.
        "innerVariable": ["epsilon_v",1],

        // Größe der Inneren Variable
        // für Skalar leer lassen, für Vector einen Eintrag usw.
        "innerVariableSize": [3],

        // Spannungsansatz
        // wird bei der Residuumserstellung substituiert für den Ausdruck
        // Summe über Quadraturpunkte von "B^T*sigma*jDet*w*t"
        // dabei wird das epsilon_n_plus_1 falls es im Spannungsansatz auftaucht
        // mit "B*uCell" substituiert und das t für den 2dimensionalen Fall mit der in den stdParams
        // angegebenen Dicke und im 3dimensionalen Fall mit 1

        "sigma": "ElastTensor*(epsilon_n_plus_1+-epsilon_v_n_plus_1)",
        
        // Evolution der inneren Variable
        //
        // Die Matrix 'I' ist eine Einheitsmatrix und hat immer so viele Zeilen wie die BMatritzen des entsprechenden Netzes
        // wenn die Größe einer vorkommenden Einheitsmatrix nicht der Reihenanzahl der entsprechenden BMatrix entspricht kann 
        // diese über Identity(...) generiert werden
        // andere Größen die substituiert werden und dementsprechen innerhalb der Formeln verwendet werden können
        // sind im folgenden gelistet
        // 
        // . (sigma)                        Spannungsansatz (wird in diesem File von Nutzer definiert)
        // . epsilon_n                      Dehnung im letzten Frame
        // . epsilon_n_plus_1               Dehnung im aktuellen Frame
        // . uCell                          Spannung des Elements im aktuellen Frame
        //
        // . ElastTensor                    Elastizitätstensor des Materials
        // . t                              Dicke des Materials (nur relevant für 2D)
        // . B                              BMatrix
        // . jDet                           Jacoby Determinante
        // . w                              Gewicht quadratur Punkt
        //
        // . S                              Deviator
        // . I                              Einheitsmatrix der Größe Zeilen BMatrix
        //
        // . deltaT                         Zeitschritt für Simulation
        // . innereVariable + _n            innere Variable im letzten Frame
        // . innereVariable + _n_plus_1     innere Variable im aktuellen Frame
        //
        // sigma sollte nur in ausnahme fällen verwendet werden und wenn nur in der Evolutionsgleichung
        // "sigma" = "sigma" führt lediglich zu Substitution von sigma in der Residuumserstellung mit dem unbekannten Skalar "sigma"
        // und das Residuum und die Jacoby Matrix bleiben davon abhängig
        // Dementsprechend kann das Problem nicht gelöst werden
        //
        // alle anderen Größen können in der Erstellung verwendet werden
        // die quadraturpunkt spezifischen Größen werden dabei für jeden Quadraturpunkt einzeln substituiert und das Ergebnis aufsummiert

        "evolutionEquation": "(I+tetha^-1*S*ElastTensor*deltaT)^-1*(epsilon_v_n+tetha^-1*S*ElastTensor*deltaT*epsilon_n_plus_1)",
        
        // zusätzliche Konstante Parameter die mit exakten Werten angegeben werden müssen
        // werden dann für jede der weiter oben angegebene Gleichungen substituiert
        "params": {
            "Identity2D": {
                "rows": 3,
                "cols": 3,
                "data": [["1","0","0"],
                        ["0","1","0"],
                        ["0","0","1"]]
            },
            "tetha": {
                "rows": 1,
                "cols": 1,
                "data": [["45000"]]
            }
        }
    }
}