#version 330 core

in vec3 fragPosition;
in vec3 fragNormal;

uniform vec3 viewPos;
uniform vec3 lightPos;
uniform vec4 materialColor;
uniform float time;

out vec4 finalColor;

float ambientStrength = 0.3;
const float fresnelStrength = 0.8;
const float specularExponent = 100;

void main()
{
    vec3 normal = normalize(fragNormal);
    vec3 viewDir = normalize(viewPos - fragPosition);
    vec3 lightDir = normalize(lightPos - fragPosition);
    vec3 halfway = normalize(viewDir + lightDir);

    vec3 ambient = ambientStrength * vec3(0.1, 0.3, 0.5); // lebendiges Blau ambient

    float diff = max(dot(normal, lightDir), 0.1);

    float spec = pow(max(dot(normal, halfway), 0.0), specularExponent);

    float fresnel = pow(1.0 - max(dot(viewDir, normal), 0.0), 5.0);

    vec3 baseColor = vec3(0.2, 0.4, 0.7); // deine eigene Blautonbasis

    vec3 lighting = ambient + diff * baseColor + spec * vec3(1.0) + fresnel * baseColor * fresnelStrength;

    lighting += vec3(0.05, 0.06, 0.08); // kleiner Glow

    finalColor = vec4(lighting, 1);
}